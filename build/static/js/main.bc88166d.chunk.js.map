{"version":3,"sources":["context/auth/authContext.js","context/types.js","context/auth/authReducer.js","utils/setAuthToken.js","context/auth/AuthState.js","context/contact/contactContext.js","context/contact/contactReducer.js","context/contact/ContactState.js","components/layout/Navbar.js","components/contacts/ContactItem.js","components/layout/spinner.gif","components/layout/Spinner.js","components/contacts/Contacts.js","components/contacts/ContactForm.js","components/contacts/ContactFilter.js","components/pages/Home.js","components/pages/About.js","context/alert/alertContext.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alerts.js","components/routing/PrivateRoute.js","context/alert/alertReducer.js","context/alert/AlertState.js","App.js","index.js"],"names":["authContext","createContext","GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","authReducer","state","action","type","isAuthenticated","loading","user","payload","token","error","Error","setAuthToken","axios","defaults","headers","common","localStorage","setItem","removeItem","useAuth","useContext","AuthContext","dispatch","loadUser","a","get","res","data","register","formData","post","response","msg","login","clearErrors","AuthState","props","initialState","getItem","useReducer","useEffect","Provider","value","children","contactContext","contactReducer","contacts","map","contact","_id","filter","filtered","current","name","email","toLowerCase","includes","useContacts","ContactContext","getContacts","addContact","deleteContact","id","delete","updateContact","put","clearCurrent","ContactState","Navbar","title","icon","authState","authDispatch","contactDispatch","authLinks","onClick","clearContacts","to","className","guestLinks","defaultProps","ContactItem","phone","style","float","charAt","toUpperCase","slice","setCurrent","Spinner","src","spinner","width","margin","display","alt","Contacts","contactState","length","TransitionGroup","CSSTransition","timeout","classNames","initialContact","ContactForm","useState","setContact","onChange","e","target","clearAll","onSubmit","preventDefault","then","placeholder","checked","ContactFilter","text","clearFilter","Home","About","AppBar","position","color","background","bottom","Container","maxWidth","Toolbar","Typography","variant","alertContext","Register","AlertContext","setAlert","history","password","password2","setUser","htmlFor","required","minLength","Login","autoComplete","Alerts","alerts","alert","PrivateRoute","Component","component","alertReducer","AlertState","uuidv4","setTimeout","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc88166d.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst authContext = createContext();\r\n\r\nexport default authContext;\r\n","export const GET_CONTACTS = \"GET_CONTACTS\";\r\nexport const ADD_CONTACT = \"ADD_CONTACT\";\r\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\r\nexport const SET_CURRENT = \"SET_CURRENT\";\r\nexport const CLEAR_CURRENT = \"CLEAR_CURRENT\";\r\nexport const UPDATE_CONTACT = \"UPDATE_CONTACT\";\r\nexport const FILTER_CONTACTS = \"FILTER_CONTACTS\";\r\nexport const CLEAR_CONTACTS = \"CLEAR_CONTACTS\";\r\nexport const CLEAR_FILTER = \"CLEAR_FILTER\";\r\nexport const CONTACT_ERROR = \"CONTACT_ERROR\";\r\nexport const SET_ALERT = \"SET_ALERT\";\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_ERRORS,\r\n} from \"../types\";\r\n\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: action.payload,\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null,\r\n        error: action.payload,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    default:\r\n      throw new Error(`Unsupported type of: ${action.type}`);\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import axios from \"axios\";\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\r\n    localStorage.setItem(\"token\", token);\r\n  } else {\r\n    delete axios.defaults.headers.common[\"x-auth-token\"];\r\n    localStorage.removeItem(\"token\");\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import React, { useReducer, useContext, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport AuthContext from \"./authContext\";\r\nimport authReducer from \"./authReducer\";\r\nimport setAuthToken from \"../../utils/setAuthToken\";\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_ERRORS,\r\n} from \"../types\";\r\n\r\n// Create a custom hook to use the auth context\r\n\r\nexport const useAuth = () => {\r\n  const { state, dispatch } = useContext(AuthContext);\r\n  return [state, dispatch];\r\n};\r\n\r\n// Load User\r\nexport const loadUser = async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/auth\");\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({ type: AUTH_ERROR });\r\n  }\r\n};\r\n\r\n// Register User\r\nexport const register = async (dispatch, formData) => {\r\n  try {\r\n    const res = await axios.post(\"/api/user\", formData);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    loadUser(dispatch);\r\n  } catch (err) {\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n      payload: err.response.data.msg,\r\n    });\r\n  }\r\n};\r\n\r\n// Login User\r\nexport const login = async (dispatch, formData) => {\r\n  try {\r\n    const res = await axios.post(\"/api/auth\", formData);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    loadUser(dispatch);\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n      payload: err.response.data.msg,\r\n    });\r\n  }\r\n};\r\n\r\n// Logout\r\nexport const logout = (dispatch) => {\r\n  dispatch({ type: LOGOUT });\r\n};\r\n\r\n// Clear Errors\r\nexport const clearErrors = (dispatch) => dispatch({ type: CLEAR_ERRORS });\r\n\r\n// AuthState Provider Component\r\n\r\nconst AuthState = (props) => {\r\n  const initialState = {\r\n    token: localStorage.getItem(\"token\"),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null,\r\n    error: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // set token on initial app loading\r\n  setAuthToken(state.token);\r\n\r\n  // load user on first run or refresh\r\n  if (state.loading) {\r\n    loadUser(dispatch);\r\n  }\r\n\r\n  // 'watch' state.token and set headers and local storage on any change\r\n  useEffect(() => {\r\n    setAuthToken(state.token);\r\n  }, [state.token]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ state: state, dispatch }}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n","import { createContext } from \"react\";\r\n\r\nconst contactContext = createContext();\r\n\r\nexport default contactContext;\r\n","import {\r\n  GET_CONTACTS,\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR,\r\n  CLEAR_CONTACTS,\r\n} from \"../types\";\r\n\r\nconst contactReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case GET_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contacts: action.payload,\r\n      };\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n    case UPDATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact._id === action.payload._id ? action.payload : contact\r\n        ),\r\n      };\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact._id !== action.payload\r\n        ),\r\n      };\r\n    case CLEAR_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contacts: null,\r\n        filtered: null,\r\n        error: null,\r\n        current: null,\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      };\r\n    case FILTER_CONTACTS:\r\n      return {\r\n        ...state,\r\n        filtered: state.contacts.filter(({ name, email }) => {\r\n          const testString = `${name}${email}`.toLowerCase();\r\n          return testString.includes(action.payload.toLowerCase());\r\n        }),\r\n      };\r\n    case CLEAR_FILTER:\r\n      return {\r\n        ...state,\r\n        filtered: null,\r\n      };\r\n    case CONTACT_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      throw new Error(`Unsupported type of: ${action.type}`);\r\n  }\r\n};\r\n\r\nexport default contactReducer;\r\n","import React, { useReducer, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport ContactContext from \"./contactContext\";\r\nimport contactReducer from \"./contactReducer\";\r\nimport {\r\n  GET_CONTACTS,\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_CONTACTS,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR,\r\n} from \"../types\";\r\n\r\n// Create a custom hook to use the contact context\r\n\r\nexport const useContacts = () => {\r\n  const { state, dispatch } = useContext(ContactContext);\r\n  return [state, dispatch];\r\n};\r\n\r\n// Get Contacts\r\nexport const getContacts = async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/contacts\");\r\n\r\n    dispatch({\r\n      type: GET_CONTACTS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: CONTACT_ERROR,\r\n      payload: err.response.msg,\r\n    });\r\n  }\r\n};\r\n\r\n// Add Contact\r\nexport const addContact = async (dispatch, contact) => {\r\n  try {\r\n    const res = await axios.post(\"/api/contacts\", contact);\r\n\r\n    dispatch({\r\n      type: ADD_CONTACT,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: CONTACT_ERROR,\r\n      payload: err.response.msg,\r\n    });\r\n  }\r\n};\r\n\r\n// Delete Contact\r\nexport const deleteContact = async (dispatch, id) => {\r\n  try {\r\n    await axios.delete(`/api/contacts/${id}`);\r\n\r\n    dispatch({\r\n      type: DELETE_CONTACT,\r\n      payload: id,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: CONTACT_ERROR,\r\n      payload: err.response.msg,\r\n    });\r\n  }\r\n};\r\n\r\n// Update Contact\r\nexport const updateContact = async (dispatch, contact) => {\r\n  try {\r\n    const res = await axios.put(`/api/contacts/${contact._id}`, contact);\r\n\r\n    dispatch({\r\n      type: UPDATE_CONTACT,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: CONTACT_ERROR,\r\n      payload: err.response.msg,\r\n    });\r\n  }\r\n};\r\n\r\n// Clear Contacts\r\nexport const clearContacts = (dispatch) => {\r\n  dispatch({ type: CLEAR_CONTACTS });\r\n};\r\n\r\n// Set Current Contact\r\nexport const setCurrent = (dispatch, contact) => {\r\n  dispatch({ type: SET_CURRENT, payload: contact });\r\n};\r\n\r\n// Clear Current Contact\r\nexport const clearCurrent = (dispatch) => {\r\n  dispatch({ type: CLEAR_CURRENT });\r\n};\r\n\r\n// Filter Contacts\r\nexport const filterContacts = (dispatch, text) => {\r\n  dispatch({ type: FILTER_CONTACTS, payload: text });\r\n};\r\n\r\n// Clear Filter\r\nexport const clearFilter = (dispatch) => {\r\n  dispatch({ type: CLEAR_FILTER });\r\n};\r\n\r\nconst ContactState = (props) => {\r\n  const initialState = {\r\n    contacts: null,\r\n    current: null,\r\n    filtered: null,\r\n    error: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n  return (\r\n    <ContactContext.Provider value={{ state: state, dispatch }}>\r\n      {props.children}\r\n    </ContactContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ContactState;\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth, logout } from \"../../context/auth/AuthState\";\r\nimport { useContacts, clearContacts } from \"../../context/contact/ContactState\";\r\n\r\nconst Navbar = ({ title, icon }) => {\r\n  const [authState, authDispatch] = useAuth();\r\n  const { isAuthenticated, user } = authState;\r\n\r\n  // we just need the contact dispatch without state.\r\n  const contactDispatch = useContacts()[1];\r\n\r\n  const onLogout = () => {\r\n    logout(authDispatch);\r\n    clearContacts(contactDispatch);\r\n  };\r\n\r\n  const authLinks = (\r\n    <Fragment>\r\n      <li>Hello {user && user.name}</li>\r\n      <li>\r\n        <Link onClick={onLogout} to=\"/login\">\r\n          <i className=\"fas fa-sign-out-alt\" />{\" \"}\r\n          <span className=\"hide-sm\">Logout</span>\r\n        </Link>\r\n        <Link to=\"/about\">About</Link>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <Fragment>\r\n      <li>\r\n        <Link to=\"/register\">Register</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/login\">Login</Link>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n\r\n  return (\r\n    <div className=\"navbar bg-primary\">\r\n      <h1>\r\n        <Link to=\"/\">\r\n          <i className={icon} /> {title}\r\n        </Link>\r\n      </h1>\r\n      <ul>{isAuthenticated ? authLinks : guestLinks}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icon: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Contact Saving \",\r\n  icon: \"fas fa-id-card-alt\",\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  useContacts,\r\n  deleteContact,\r\n  setCurrent,\r\n  clearCurrent,\r\n} from \"../../context/contact/ContactState\";\r\n\r\nconst ContactItem = ({ contact }) => {\r\n  // we just need the contact dispatch without state.\r\n  const contactDispatch = useContacts()[1];\r\n\r\n  const { _id, name, email, phone, type } = contact;\r\n\r\n  const onDelete = () => {\r\n    deleteContact(contactDispatch, _id);\r\n    clearCurrent(contactDispatch);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card bg-light\">\r\n      <h3 className=\"text-primary text-left\">\r\n        {name}{\" \"}\r\n        <span\r\n          style={{ float: \"right\" }}\r\n          className={\r\n            \"badge \" +\r\n            (type === \"professional\" ? \"badge-success\" : \"badge-primary\")\r\n          }\r\n        >\r\n          {type.charAt(0).toUpperCase() + type.slice(1)}\r\n        </span>\r\n      </h3>\r\n      <ul className=\"list\">\r\n        {email && (\r\n          <li>\r\n            <i className=\"fas fa-envelope-open\" /> {email}\r\n          </li>\r\n        )}\r\n        {phone && (\r\n          <li>\r\n            <i className=\"fas fa-phone\" /> {phone}\r\n          </li>\r\n        )}\r\n      </ul>\r\n      <p>\r\n        <button\r\n          className=\"btn btn-dark btn-sm\"\r\n          onClick={() => setCurrent(contactDispatch, contact)}\r\n        >\r\n          Edit\r\n        </button>\r\n        <button className=\"btn btn-danger btn-sm\" onClick={onDelete}>\r\n          Delete\r\n        </button>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","export default __webpack_public_path__ + \"static/media/spinner.89906e12.gif\";","import React from \"react\";\r\nimport spinner from \"./spinner.gif\";\r\n\r\nconst Spinner = () => (\r\n  <img\r\n    src={spinner}\r\n    style={{ width: \"200px\", margin: \"auto\", display: \"block\" }}\r\n    alt=\"Loading...\"\r\n  />\r\n);\r\n\r\nexport default Spinner;\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport ContactItem from \"./ContactItem\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { useContacts, getContacts } from \"../../context/contact/ContactState\";\r\n\r\nconst Contacts = () => {\r\n  const [contactState, contactDispatch] = useContacts();\r\n\r\n  const { contacts, filtered } = contactState;\r\n\r\n  useEffect(() => {\r\n    getContacts(contactDispatch);\r\n  }, [contactDispatch]);\r\n\r\n  if (contacts !== null && contacts.length === 0) {\r\n    return <h4>Please add a contact</h4>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {contacts !== null ? (\r\n        <TransitionGroup>\r\n          {filtered !== null\r\n            ? filtered.map((contact) => (\r\n                <CSSTransition\r\n                  key={contact._id}\r\n                  timeout={500}\r\n                  classNames=\"item\"\r\n                >\r\n                  <ContactItem contact={contact} />\r\n                </CSSTransition>\r\n              ))\r\n            : contacts.map((contact) => (\r\n                <CSSTransition\r\n                  key={contact._id}\r\n                  timeout={500}\r\n                  classNames=\"item\"\r\n                >\r\n                  <ContactItem contact={contact} />\r\n                </CSSTransition>\r\n              ))}\r\n        </TransitionGroup>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  addContact,\r\n  useContacts,\r\n  updateContact,\r\n  clearCurrent,\r\n} from \"../../context/contact/ContactState\";\r\n\r\nconst initialContact = {\r\n  name: \"\",\r\n  email: \"\",\r\n  phone: \"\",\r\n  type: \"personal\",\r\n};\r\n\r\nconst ContactForm = () => {\r\n  const [contactState, contactDispatch] = useContacts();\r\n\r\n  const { current } = contactState;\r\n\r\n  const [contact, setContact] = useState(initialContact);\r\n\r\n  useEffect(() => {\r\n    if (current !== null) {\r\n      setContact(current);\r\n    } else {\r\n      setContact(initialContact);\r\n    }\r\n  }, [current]);\r\n\r\n  const { name, email, phone, type } = contact;\r\n\r\n  const onChange = (e) =>\r\n    setContact({ ...contact, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (current === null) {\r\n      addContact(contactDispatch, contact).then(() =>\r\n        setContact(initialContact)\r\n      );\r\n    } else {\r\n      updateContact(contactDispatch, contact);\r\n    }\r\n    clearAll();\r\n  };\r\n\r\n  const clearAll = () => {\r\n    clearCurrent(contactDispatch);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <h2 className=\"text-primary\">\r\n        {current ? \"Edit Contact\" : \"Add Contact\"}\r\n      </h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Name\"\r\n        name=\"name\"\r\n        value={name}\r\n        onChange={onChange}\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        name=\"email\"\r\n        value={email}\r\n        onChange={onChange}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Phone\"\r\n        name=\"phone\"\r\n        value={phone}\r\n        onChange={onChange}\r\n      />\r\n      <h5>Contact Type</h5>\r\n      <input\r\n        type=\"radio\"\r\n        name=\"type\"\r\n        value=\"personal\"\r\n        checked={type === \"personal\"}\r\n        onChange={onChange}\r\n      />{\" \"}\r\n      Personal{\" \"}\r\n      <input\r\n        type=\"radio\"\r\n        name=\"type\"\r\n        value=\"professional\"\r\n        checked={type === \"professional\"}\r\n        onChange={onChange}\r\n      />{\" \"}\r\n      Professional\r\n      <div>\r\n        <input\r\n          type=\"submit\"\r\n          value={current ? \"Update Contact\" : \"Add Contact\"}\r\n          className=\"btn btn-primary btn-block\"\r\n        />\r\n      </div>\r\n      {current && (\r\n        <div>\r\n          <button className=\"btn btn-light btn-block\" onClick={clearAll}>\r\n            Clear\r\n          </button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport {\r\n  useContacts,\r\n  filterContacts,\r\n  clearFilter,\r\n} from \"../../context/contact/ContactState\";\r\n\r\nconst ContactFilter = () => {\r\n  // we just need the conact dispatch without state.\r\n  const contactDispatch = useContacts()[1];\r\n\r\n  const onChange = (e) => {\r\n    if (e.target.value !== \"\") {\r\n      filterContacts(contactDispatch, e.target.value);\r\n    } else {\r\n      clearFilter(contactDispatch);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={(e) => e.preventDefault()}>\r\n      <input type=\"text\" placeholder=\"Filter Contacts...\" onChange={onChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactFilter;\r\n","import React from \"react\";\r\nimport Contacts from \"../contacts/Contacts\";\r\nimport ContactForm from \"../contacts/ContactForm\";\r\nimport ContactFilter from \"../contacts/ContactFilter\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"grid-2\">\r\n      <div>\r\n        <ContactForm />\r\n      </div>\r\n      <div>\r\n        <ContactFilter />\r\n        <Contacts />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1>About</h1>\r\n      <p>\r\n        This is MERN stack Project called <b>Contact-saving</b> Web application\r\n        using\r\n      </p>\r\n      <ul>\r\n        <li>Express Backend API</li>\r\n        <li>jwt authentication(JSON Web Token)</li>\r\n        <li>MongoDB / Mongoose</li>\r\n        <li>Password Encryption</li>\r\n        <li>React Hooks</li>\r\n        <li>Context API</li>\r\n        <li>Route Protection</li>\r\n      </ul>\r\n      <div>\r\n        <AppBar\r\n          position=\"relative\"\r\n          color=\"primary\"\r\n          style={{ background: \"#cccccc\", bottom: -300 }}\r\n        >\r\n          <Container maxWidth=\"md\">\r\n            <Toolbar>\r\n              <Typography variant=\"body1\" style={{ color: \"brown\" }}>\r\n                © 2021 Contact-Savings\r\n              </Typography>\r\n            </Toolbar>\r\n          </Container>\r\n        </AppBar>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { createContext } from \"react\";\r\n\r\nconst alertContext = createContext();\r\n\r\nexport default alertContext;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport alertContext from \"../../context/alert/alertContext\";\r\nimport { useAuth, clearErrors, register } from \"../../context/auth/AuthState\";\r\n\r\nconst Register = (props) => {\r\n  const AlertContext = useContext(alertContext);\r\n  const [authState, authDispatch] = useAuth();\r\n  const { error, isAuthenticated } = authState;\r\n\r\n  const { setAlert } = AlertContext;\r\n\r\n  useEffect(() => {\r\n    if (error === \"User already exists\") {\r\n      setAlert(error, \"danger\");\r\n      clearErrors(authDispatch);\r\n    }\r\n  }, [error, isAuthenticated, props.history, setAlert, authDispatch]);\r\n\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n\r\n  const { name, email, password, password2 } = user;\r\n\r\n  const onChange = (e) => setUser({ ...user, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (name === \"\" || email === \"\" || password === \"\") {\r\n      setAlert(\"Please enter all fields\", \"danger\");\r\n    } else if (password !== password2) {\r\n      setAlert(\"Passwords do not match\", \"danger\");\r\n    } else {\r\n      register(authDispatch, {\r\n        name,\r\n        email,\r\n        password,\r\n      });\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) return <Navigate to=\"/\" />;\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h1>\r\n        Account <span className=\"text-primary\">Register</span>\r\n      </h1>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input\r\n            id=\"name\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email Address</label>\r\n          <input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={onChange}\r\n            required\r\n            minLength=\"6\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password2\">Confirm Password</label>\r\n          <input\r\n            id=\"password2\"\r\n            type=\"password\"\r\n            name=\"password2\"\r\n            value={password2}\r\n            onChange={onChange}\r\n            required\r\n            minLength=\"6\"\r\n          />\r\n        </div>\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Register\"\r\n          className=\"btn btn-primary btn-block\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport AlertContext from \"../../context/alert/alertContext\";\r\nimport { useAuth, clearErrors, login } from \"../../context/auth/AuthState\";\r\n\r\nconst Login = () => {\r\n  const alertContext = useContext(AlertContext);\r\n  const { setAlert } = alertContext;\r\n\r\n  const [authState, authDispatch] = useAuth();\r\n  const { error, isAuthenticated } = authState;\r\n\r\n  useEffect(() => {\r\n    if (error === \"Invalid Credentials\") {\r\n      setAlert(error, \"danger\");\r\n      clearErrors(authDispatch);\r\n    }\r\n  }, [error, isAuthenticated, authDispatch, setAlert]);\r\n\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = user;\r\n\r\n  const onChange = (e) => setUser({ ...user, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (email === \"\" || password === \"\") {\r\n      setAlert(\"Please fill in all fields\", \"danger\");\r\n    } else {\r\n      login(authDispatch, {\r\n        email,\r\n        password,\r\n      });\r\n    }\r\n  };\r\n  if (isAuthenticated) return <Navigate to=\"/\" />;\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h1>\r\n        Account <span className=\"text-primary\">Login</span>\r\n      </h1>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email Address</label>\r\n          <input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            autoComplete=\"on\"\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Login\"\r\n          className=\"btn btn-primary btn-block\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useContext } from \"react\";\r\nimport alertContext from \"../../context/alert/alertContext\";\r\n\r\nconst Alerts = () => {\r\n  const AlertContext = useContext(alertContext);\r\n\r\n  return (\r\n    AlertContext.alerts.length > 0 &&\r\n    AlertContext.alerts.map((alert) => (\r\n      <div key={alert.id} className={`alert alert-${alert.type}`}>\r\n        <i className=\"fas fa-info-circle\" /> {alert.msg}\r\n      </div>\r\n    ))\r\n  );\r\n};\r\n\r\nexport default Alerts;\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/auth/AuthState\";\r\nimport Spinner from \"../../components/layout/Spinner\";\r\n\r\nconst PrivateRoute = ({ component: Component }) => {\r\n  const [authState] = useAuth();\r\n  const { isAuthenticated, loading } = authState;\r\n  if (loading) return <Spinner />;\r\n  if (isAuthenticated) return <Component />;\r\n  return <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import { SET_ALERT, REMOVE_ALERT } from \"../types\";\r\n\r\nconst alertReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return [...state, action.payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default alertReducer;\r\n","import React, { useReducer } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport alertContext from \"./alertContext\";\r\nimport alertReducer from \"./alertReducer\";\r\nimport { SET_ALERT, REMOVE_ALERT } from \"../types\";\r\n\r\nconst AlertState = (props) => {\r\n  const initialState = [];\r\n\r\n  const [state, dispatch] = useReducer(alertReducer, initialState);\r\n\r\n  // Set Alert\r\n  const setAlert = (msg, type, timeout = 5000) => {\r\n    const id = uuidv4();\r\n    dispatch({\r\n      type: SET_ALERT,\r\n      payload: { msg, type, id },\r\n    });\r\n\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n  };\r\n\r\n  return (\r\n    <alertContext.Provider\r\n      value={{\r\n        alerts: state,\r\n        setAlert,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </alertContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlertState;\r\n","import React, { Fragment } from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Home from \"./components/pages/Home\";\nimport About from \"./components/pages/About\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport Alerts from \"./components/layout/Alerts\";\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\n\nimport ContactState from \"./context/contact/ContactState\";\nimport AuthState from \"./context/auth/AuthState\";\nimport AlertState from \"./context/alert/AlertState\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <AuthState>\n      <ContactState>\n        <AlertState>\n          <BrowserRouter>\n            <Fragment>\n              <Navbar />\n              <div className=\"container\">\n                <Alerts />\n                <Routes>\n                  <Route path=\"/\" element={<PrivateRoute component={Home} />} />\n                  <Route path=\"about\" element={<About />} />\n                  <Route path=\"register\" element={<Register />} />\n                  <Route path=\"login\" element={<Login />} />\n                </Routes>\n              </div>\n            </Fragment>\n          </BrowserRouter>\n        </AlertState>\n      </ContactState>\n    </AuthState>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}